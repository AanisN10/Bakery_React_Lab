{"ast":null,"code":"var _jsxFileName = \"/Users/an/BNTA/bnta_work/week_09/day_4/lab_react_forms/start_code/src/containers/CakeContainer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CakeForm from \"../components/CakeForm.js\";\nimport CakeList from \"../components/CakeList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CakeContainer = () => {\n  _s();\n  const [listOfCakes, setListOfCakes] = useState([{\n    cakeName: \"Victoria Sponge\",\n    ingredients: [\"eggs\", \"butter\", \"sugar\", \"self-raising flour\", \"baking powder\", \"milk\"],\n    price: 5,\n    rating: 5,\n    id: 1\n  }, {\n    cakeName: \"Tea Loaf\",\n    ingredients: [\"eggs\", \"oil\", \"dried fruit\", \"sugar\", \"self-raising flour\", \"strong tea\"],\n    price: 2,\n    rating: 3,\n    id: 2\n  }, {\n    cakeName: \"Carrot Cake\",\n    ingredients: [\"carrots\", \"walnuts\", \"oil\", \"cream cheese\", \"flour\", \"sugar\"],\n    price: 8,\n    rating: 5,\n    id: 3\n  }]);\n  const handleNewSubmission = newCake => {\n    const updatedCakes = [...cakes];\n    updatedCakes.push(newCake);\n    setListOfCakes(updatedCakes);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CakeForm, {\n      handleNewSubmission: handleNewSubmission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CakeList, {\n      cakes: listOfCakes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(CakeContainer, \"/sMuQe7/QIsUqWErjzu3ZSexRYY=\");\n_c = CakeContainer;\nexport default CakeContainer;\nvar _c;\n$RefreshReg$(_c, \"CakeContainer\");","map":{"version":3,"names":["useState","CakeForm","CakeList","jsxDEV","_jsxDEV","Fragment","_Fragment","CakeContainer","_s","listOfCakes","setListOfCakes","cakeName","ingredients","price","rating","id","handleNewSubmission","newCake","updatedCakes","cakes","push","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/an/BNTA/bnta_work/week_09/day_4/lab_react_forms/start_code/src/containers/CakeContainer.js"],"sourcesContent":["import { useState } from \"react\";\nimport CakeForm from \"../components/CakeForm.js\";\nimport CakeList from \"../components/CakeList.js\";\n\nconst CakeContainer = () => {\n\n    const [listOfCakes, setListOfCakes] = useState(\n\t\t[\n\t\t\t{\n\t\t\t\tcakeName: \"Victoria Sponge\",\n\t\t\t\t   ingredients: [\n\t\t\t\t\t   \"eggs\",\n\t\t\t\t\t  \"butter\",\n\t\t\t\t\t  \"sugar\",\n\t\t\t\t\t  \"self-raising flour\",\n\t\t\t\t\t  \"baking powder\",\n\t\t\t\t\t  \"milk\"\n\t\t\t\t  ],\n\t\t\t\t  price: 5,\n\t\t\t\t   rating: 5,\n\t\t\t\t   id: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t cakeName: \"Tea Loaf\",\n\t\t\t\t   ingredients: [\n\t\t\t\t\t   \"eggs\",\n\t\t\t\t\t  \"oil\",\n\t\t\t\t\t  \"dried fruit\",\n\t\t\t\t\t  \"sugar\",\n\t\t\t\t\t  \"self-raising flour\",\n\t\t\t\t\t  \"strong tea\",\n\t\t\t\t  ],\n\t\t\t\t  price: 2,\n\t\t\t\t  rating: 3,\n\t\t\t\t  id: 2\n\t\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t\t cakeName: \"Carrot Cake\",\n\t\t\t\t   ingredients: [\n\t\t\t\t\t\"carrots\",\n\t\t\t\t\t  \"walnuts\",\n\t\t\t\t\t  \"oil\",\n\t\t\t\t\t  \"cream cheese\",\n\t\t\t\t\t  \"flour\",\n\t\t\t\t\t  \"sugar\",\n\t\t\t\t   ],\n\t\t\t\t   price: 8,\n\t\t\t\t   rating: 5,\n\t\t\t\t   id: 3\n\t\t\t} \n\t\t]\t\t\n\t)\n\n\tconst handleNewSubmission = (newCake)=>{\n\t\tconst updatedCakes = [...cakes];\n\t\tupdatedCakes.push(newCake);\n\t\tsetListOfCakes(updatedCakes);\n\t};\n\n  return (\n    <>\n        <CakeForm handleNewSubmission={handleNewSubmission}/>\n\t\t<CakeList cakes ={listOfCakes}/>\n       \n    </>\n  )\n}\n\nexport default CakeContainer;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAChD,CACC;IACCW,QAAQ,EAAE,iBAAiB;IACxBC,WAAW,EAAE,CACZ,MAAM,EACP,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,eAAe,EACf,MAAM,CACN;IACDC,KAAK,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,EAAE,EAAE;EACR,CAAC,EACD;IACEJ,QAAQ,EAAE,UAAU;IAClBC,WAAW,EAAE,CACZ,MAAM,EACP,KAAK,EACL,aAAa,EACb,OAAO,EACP,oBAAoB,EACpB,YAAY,CACZ;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,EAAE,EAAE;EAEP,CAAC,EACD;IACEJ,QAAQ,EAAE,aAAa;IACrBC,WAAW,EAAE,CACf,SAAS,EACP,SAAS,EACT,KAAK,EACL,cAAc,EACd,OAAO,EACP,OAAO,CACN;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,EAAE,EAAE;EACR,CAAC,CAEH,CAAC;EAED,MAAMC,mBAAmB,GAAIC,OAAO,IAAG;IACtC,MAAMC,YAAY,GAAG,CAAC,GAAGC,KAAK,CAAC;IAC/BD,YAAY,CAACE,IAAI,CAACH,OAAO,CAAC;IAC1BP,cAAc,CAACQ,YAAY,CAAC;EAC7B,CAAC;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA,CAACH,QAAQ;MAACe,mBAAmB,EAAEA;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DrB,OAAA,CAACF,QAAQ;MAACiB,KAAK,EAAGV;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAE5B,CAAC;AAEP,CAAC;AAAAjB,EAAA,CA/DKD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}